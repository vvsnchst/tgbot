from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List
from models import Vacancy, Resume

def get_main_menu() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë®‚Äçüíº –Ø —Å–æ–∏—Å–∫–∞—Ç–µ–ª—å", callback_data="job_seeker")],
        [InlineKeyboardButton(text="üë®‚Äçüíª –Ø —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å", callback_data="employer")]
    ])
    return keyboard

def get_job_seeker_menu() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è"""
    keyboard = [
        [InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑—é–º–µ", callback_data="create_resume")],
        [InlineKeyboardButton(text="–ú–æ–∏ —Ä–µ–∑—é–º–µ", callback_data="my_resumes")],
        [InlineKeyboardButton(text="–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π", callback_data="search_vacancies")],
        [InlineKeyboardButton(text="–ú–æ–∏ –æ—Ç–∫–ª–∏–∫–∏", callback_data="my_applications")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_employer_menu() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é", callback_data="post_vacancy")],
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –≤–∞–∫–∞–Ω—Å–∏–∏", callback_data="my_vacancies")],
        [InlineKeyboardButton(text="üì¨ –û—Ç–∫–ª–∏–∫–∏", callback_data="responses")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    return keyboard

def get_vacancies_list_keyboard(vacancies: List[Vacancy]) -> InlineKeyboardMarkup:
    keyboard = []
    for vacancy in vacancies:
        keyboard.append([InlineKeyboardButton(
            text=vacancy.title,
            callback_data=f"view_vacancy_{vacancy.id}"
        )])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="employer")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_back_to_vacancies_list_keyboard(vacancy_id: int) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –≤–∞–∫–∞–Ω—Å–∏–π", callback_data="my_vacancies")],
        [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é", callback_data=f"delete_vacancy_{vacancy_id}")]
    ])
    return keyboard

def get_skip_file_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–∞–π–ª–∞", callback_data="skip_file")]
    ])
    return keyboard

def get_confirm_skip_file_keyboard() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–î–∞", callback_data="confirm_skip_file"),
            InlineKeyboardButton(text="–ù–µ—Ç", callback_data="cancel_skip_file")
        ]
    ])
    return keyboard

def get_confirm_delete_vacancy_keyboard(vacancy_id: int) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–î–∞", callback_data=f"confirm_delete_vacancy_{vacancy_id}"),
            InlineKeyboardButton(text="–ù–µ—Ç", callback_data=f"view_vacancy_{vacancy_id}")
        ]
    ])
    return keyboard

def get_resumes_list_keyboard(resumes):
    keyboard = []
    for resume in resumes:
        keyboard.append([InlineKeyboardButton(
            text=f"{resume.title}",
            callback_data=f"view_resume_{resume.id}"
        )])
    keyboard.append([InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data="return_to_main_menu"
    )])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_confirm_delete_resume_keyboard(resume_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_delete_resume_{resume_id}"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="my_resumes")
        ]
    ])

def get_back_to_resumes_list_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É —Ä–µ–∑—é–º–µ",
                callback_data="my_resumes"
            ),
            InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å —Ä–µ–∑—é–º–µ",
                callback_data="delete_resume"
            )
        ]
    ])

def get_vacancy_navigation_keyboard(vacancy_id: int, total_vacancies: int, current_index: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º –≤–∞–∫–∞–Ω—Å–∏—è–º"""
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if current_index > 0:
        nav_buttons.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è",
            callback_data=f"prev_vacancy_{current_index}"
        ))
    if current_index < total_vacancies - 1:
        nav_buttons.append(InlineKeyboardButton(
            text="‚û°Ô∏è",
            callback_data=f"next_vacancy_{current_index}"
        ))
    if nav_buttons:
        keyboard.append(nav_buttons)
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª–∏–∫–∞
    keyboard.append([
        InlineKeyboardButton(
            text="–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è",
            callback_data=f"apply_vacancy_{vacancy_id}"
        )
    ])
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    keyboard.append([
        InlineKeyboardButton(
            text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
            callback_data="back_to_menu"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_resume_selection_keyboard(resumes: List[Resume], vacancy_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–∑—é–º–µ –ø—Ä–∏ –æ—Ç–∫–ª–∏–∫–µ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é"""
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ —Å —Ä–µ–∑—é–º–µ
    for resume in resumes:
        keyboard.append([
            InlineKeyboardButton(
                text=resume.title,
                callback_data=f"select_resume_{resume.id}_{vacancy_id}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤–∞–∫–∞–Ω—Å–∏–∏
    keyboard.append([
        InlineKeyboardButton(
            text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–∞–∫–∞–Ω—Å–∏–∏",
            callback_data=f"back_to_vacancy_{vacancy_id}"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_application_response_keyboard(application_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ—Ç–∫–ª–∏–∫"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å",
                callback_data=f"invite_{application_id}"
            ),
            InlineKeyboardButton(
                text="–û—Ç–∫–∞–∑–∞—Ç—å",
                callback_data=f"reject_{application_id}"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

__all__ = [
    'get_main_menu',
    'get_employer_menu',
    'get_job_seeker_menu',
    'get_skip_file_keyboard',
    'get_confirm_skip_file_keyboard',
    'get_vacancies_list_keyboard',
    'get_back_to_vacancies_list_keyboard',
    'get_confirm_delete_vacancy_keyboard',
    'get_resumes_list_keyboard',
    'get_back_to_resumes_list_keyboard',
    'get_confirm_delete_resume_keyboard',
    'get_vacancy_navigation_keyboard',
    'get_resume_selection_keyboard',
    'get_application_response_keyboard'
] 